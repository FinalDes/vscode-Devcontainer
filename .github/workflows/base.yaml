name: vscode-base-build-container

on:
  push:
    branches:
      - 'master'
    paths:
      - base.Dockerfile
      - .github/workflows/base.yaml
  pull_request:
    branches:
      - 'master'
    paths:
      - base.Dockerfile
      - .github/workflows/base.yaml
  workflow_dispatch:
    # paths:
    #   - ".devcontainer/Dockerfile"
    #   - ".github/workflows/base.yml"
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - 
        name: checkout
        uses: actions/checkout@v2
      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      -
        name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Docker meta
        id: base_meta
        uses: docker/metadata-action@v3.3.0
        with:
          images: |
            ghcr.io/finaldes/vscode-devcontainer
            finaldes/vscode-devcontainer
          flavor: |
            latest=false
          tags: |
            type=sha
            type=raw,value=base
      -
        # this will build the amd64 image
        name: Docker Build
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          target: base
          file: .devcontainer/Dockerfile
          push: false
          tags: ${{ steps.base_meta.outputs.tags }}
          labels: ${{ steps.base_meta.outputs.labels }}
          load: true
      - 
        name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'finaldes/vscode-devcontainer:base'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'

      - 
        name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: 'trivy-results.sarif'

      -
        # this will push the amd64 image
        name: Docker Build
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          target: base
          file: .devcontainer/Dockerfile
          push: ${{ github.event_name != 'pull_request'}}
          tags: ${{ steps.base_meta.outputs.tags }}
          labels: ${{ steps.base_meta.outputs.labels }}
      -
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      -
        name: Show image digest
        run: echo ${{ steps.docker_build_and_push.outputs.digest }}